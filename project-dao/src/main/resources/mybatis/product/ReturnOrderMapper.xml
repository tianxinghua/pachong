<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangpin.iog.product.dao.ReturnOrderMapper">

    <resultMap id="OrderResultMap" type="iog_returnOrder">

        <id column="ID" property="id" />
        <result column="SUPPLIER_ID" property="supplierId"  />
        <result column="SUPPLIER_NO" property="supplierNo"  />
        <result column="UUID" property="uuId"  />
        <result column="SP_ORDER_ID" property="spOrderId"  />
        <result column="SUPPLIER_ORDER_NO" property="supplierOrderNo"  />
        <result column="SP_PURCHASE_NO" property="spPurchaseNo"  />
        <result column="DETAIL" property="detail"  />
        <result column="STATUS" property="status"/>
        <result column="MEMO" property="memo"/>
        <result column="DELIVERY_NO" property="deliveryNo"/>
        <result column="CREATE_TIME" property="createTime"  />
        <result column="UPDATE_TIME" property="updateTime"  />
        <result column="EXC_STATE" property="excState"  />
        <result column="EXC_DESC" property="excDesc"  />
        <result column="EXC_TIME" property="excTime" />
    </resultMap>
    <sql id="id_out_column">
        SUPPLIER_ID,
        SUPPLIER_NO,
        UUID,
        SP_ORDER_ID,
        SUPPLIER_ORDER_NO,
        SP_PURCHASE_NO,
        DETAIL,
        MEMO,
        STATUS,
        CREATE_TIME,
        EXC_STATE,
		EXC_DESC
    </sql>
    <insert id="save"  parameterType="iog_returnOrder" >
        insert into RETURN_ORDER (
        <include refid="id_out_column"></include>
        )
        values(
        #{supplierId},#{supplierNo}, #{uuId}, #{spOrderId},#{supplierOrderNo},#{spPurchaseNo},
        #{detail},#{memo},#{status},#{createTime},#{excState},#{excDesc}
        )
    </insert>

    <select id="findBySupplierIdAndStatus"  resultMap="OrderResultMap">
        select
        ID as ID,
        SUPPLIER_ID as SUPPLIER_ID,
        UUID as UUID,
        SP_ORDER_ID ,
        SP_PURCHASE_NO,
        SUPPLIER_ORDER_NO as SUPPLIER_ORDER_NO,
        STATUS as STATUS,
        DETAIL as DETAIL,
        UPDATE_TIME as UPDATE_TIME,
        CREATE_TIME as CREATE_TIME,
        EXC_STATE as EXC_STATE,
        EXC_DESC  as EXC_DESC


        from RETURN_ORDER
        <where>

            <if test="null!=supplierId">
                SUPPLIER_ID=#{supplierId}
            </if>
            <if test="null!=status">
                and  STATUS = #{status}
            </if>
        </where>


    </select>



    <select id="findBySupplierIdAndOrderStatusAndExcStatus"    resultMap="OrderResultMap">
        select
        ID as ID,
        SUPPLIER_ID as SUPPLIER_ID,
        UUID as UUID,
        SP_ORDER_ID ,
        SP_PURCHASE_NO,
        SUPPLIER_ORDER_NO as SUPPLIER_ORDER_NO,
        STATUS as STATUS,
        DETAIL as DETAIL,
        UPDATE_TIME as UPDATE_TIME,
        CREATE_TIME as CREATE_TIME,
        EXC_STATE as EXC_STATE,
        EXC_DESC  as EXC_DESC


        from RETURN_ORDER
        <where>

            <if test="null!=supplierId">
                SUPPLIER_ID=#{supplierId}
            </if>
            <if test="null!=status">
                and  STATUS = #{status}
            </if>
            <if test="null!=excState">
                and  EXC_STATE = #{excState}
            </if>
        </where>


    </select>

    <update id="updateReturnOrderStatus" parameterType="Map" >
        update RETURN_ORDER
        <set>
            <if test="status != null"> STATUS = #{status}, </if>
            <if test="updateTime != null"> UPDATE_TIME = #{updateTime} </if>

        </set>

        where UUID = #{uuid}
        <!--<foreach collection="uuid" index="index" item="item" open="(" separator="," close=")">-->
        <!--#{item}-->
        <!--</foreach>-->

    </update>


    <update id="updateReturnOrderMsg" parameterType="Map" >
        update RETURN_ORDER
        <set>
            <if test="status != null"> STATUS = #{status}, </if>
            <if test="memo != null"> MEMO = #{memo}, </if>
            <if test="updateTime != null"> UPDATE_TIME = #{updateTime}, </if>
            <if test="deliveryNo != null"> DELIVERY_NO = #{deliveryNo},</if>
            <if test="excState != null"> EXC_STATE = #{excState}, </if>
            <if test="excDesc != null"> EXC_DESC = #{excDesc}, </if>
            <if test="excTime != null"> EXC_TIME = #{excTime}</if>



        </set>
        where UUID = #{uuid}


    </update>
</mapper>