<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangpin.iog.product.dao.SkuMapper">

	<resultMap id="skuMap" type="iog_sku">
		<id column="ID" property="id" />
		<result column="SUPPLIER_ID" property="supplierId"  />
		<result column="SPU_ID" property="spuId"  />
		<result column="SKU_ID" property="skuId"  />
		<result column="PRODUCT_NAME" property="productName"  />
		<result column="SUPPLIER_PRICE" property="supplierPrice" />
		<result column="BARCODE" property="barcode"  />
		<result column="PRODUCT_CODE" property="productCode"  />
		<result column="COLOR" property="color"  />
        <result column="PRODUCT_DESCRIPTION" property="productDescription"/>
        <result column="SALE_CURRENCY" property="saleCurrency"  />
        <result column="MEMO" property="memo"  />

        <result column="PRODUCT_SIZE" property="productSize" />
        <result column="STOCK" property="stock" />
        <result column="CREATE_TIME" property="createTime" />
        <result column="LAST_TIME" property="lastTime" />
        <result column="MEASUREMENT" property="measurement" />
        
	</resultMap>


	<resultMap id="stockAndPriceMap" type="iog_sku">
		<result column="SUPPLIER_ID" property="supplierId"  />
		<result column="SKU_ID" property="skuId"  />
		<result column="STOCK" property="stock" />
		<result column="SUPPLIER_PRICE" property="supplierPrice" />
		<result column="MARKET_PRICE" property="marketPrice" />
		<result column="SALE_PRICE" property="salePrice" />
		<result column="NEW_MARKET_PRICE" property="newMarketPrice" />
		<result column="NEW_SUPPLIER_PRICE" property="newSupplierPrice" />
		<result column="NEW_SALE_PRICE" property="newSalePrice" />

	</resultMap>
	
	<resultMap type="iog_newPrice" id="priceMap">
		<result column="skuId" property="skuId"  />
		<result column="supplierPrice" property="supplierPrice" />
		<result column="marketPrice" property="marketPrice" />
		<result column="salePrice" property="salePrice" />
		<result column="newMarketPrice" property="newMarketPrice" />
		<result column="newSupplierPrice" property="newSupplierPrice" />
		<result column="newSalePrice" property="newSalePrice" />
	</resultMap>
	
	<resultMap type="iog_sku" id="skuId_spSkuId">
		<result column="SKU_ID" property="skuId"  />
		<result column="SP_SKU_ID" property="spSkuId"  />
		<result column="SP_PRODUCT_CODE" property="spProductCode"/>
	</resultMap>

	<sql id="all_sku_column">
		ID ,
		SUPPLIER_ID ,
		SPU_ID,
		SKU_ID,
        PRODUCT_NAME,
        MARKET_PRICE,
        SALE_PRICE,
        SUPPLIER_PRICE,
        BARCODE,
        PRODUCT_CODE,
        COLOR,
        PRODUCT_DESCRIPTION,SALE_CURRENCY,
        PRODUCT_SIZE,STOCK,MEMO,CREATE_TIME,LAST_TIME,
        NEW_MARKET_PRICE,
        NEW_SALE_PRICE,
        NEW_SUPPLIER_PRICE,UPDATE_TIME ,   EVENT_START_DATE,EVENT_END_DATE,MEASUREMENT,SP_SKU_ID

	</sql>

	<select id="findSupplierPrice"  resultMap="skuMap" parameterType="java.lang.String">
	        select
	        SUPPLIER_PRICE
	        from SKU
	        <where>
	            <if test="null!=supplierId">
	                SUPPLIER_ID = #{supplierId}
	            </if>
	            <if test="null!=skuId">
	                and SKU_ID = #{skuId}
	            </if>
	
	
	        </where>
	
	
	
	    </select>
	<select id="findBarCodeBySkuId"  resultType = "String" parameterType="java.lang.String">
	        select
	        BARCODE
	        from SKU
	        <where>
	            <if test="null!=supplierId">
	                SUPPLIER_ID = #{supplierId}
	            </if>
	            <if test="null!=skuId">
	                and SKU_ID = #{skuId}
	            </if>
				limit 1	
	        </where>
	
	    </select>
    <insert id="save"  parameterType="iog_sku" >



        insert into SKU(

        <include refid="all_sku_column"></include>
        )
        values(
            #{id}, #{supplierId}, #{spuId}, #{skuId},
            #{productName},#{marketPrice},#{salePrice}, #{supplierPrice}, #{barcode}, #{productCode},
            #{color} , #{productDescription}, #{saleCurrency}, #{productSize}, #{stock},#{memo},
            #{createTime}, #{lastTime}, #{newMarketPrice} , #{newSalePrice} , #{newSupplierPrice} ,
        #{updateTime},#{eventStartDate},#{eventEndDate},#{measurement},#{spSkuId}

        )


    </insert>

    <update id="updatePriceAndStock" parameterType="iog_sku" >
          update SKU
          <set>
			 <if test="marketPrice != null"> NEW_MARKET_PRICE = #{marketPrice}, </if> 
			 <if test="salePrice != null"> NEW_SALE_PRICE = #{salePrice}, </if> 
			 <if test="supplierPrice != null"> NEW_SUPPLIER_PRICE = #{supplierPrice},</if>
<!--               <if test="marketPrice != null"> MARKET_PRICE = #{marketPrice}, </if> -->
<!--               <if test="salePrice != null"> SALE_PRICE = #{salePrice}, </if> -->
<!--               <if test="supplierPrice != null"> SUPPLIER_PRICE = #{supplierPrice},</if> -->
              <if test="stock != null"> STOCK = #{stock},</if>
              <if test="color != null"> COLOR = #{color},</if>
              <if test="productDescription != null"> PRODUCT_DESCRIPTION = #{productDescription},</if>
              <if test="updateTime != null"> UPDATE_TIME = #{updateTime},</if>
			  <if test="lastTime != null"> LAST_TIME = #{lastTime},</if>
              <if test="eventStartDate != null"> EVENT_START_DATE = #{eventStartDate},</if>
              <if test="eventEndDate != null"> EVENT_END_DATE = #{eventEndDate}</if>
          </set>


          where  SUPPLIER_ID = #{supplierId}   and   SKU_ID = #{skuId}

    </update>

    <insert id="saveList"  parameterType="java.util.List" >



        insert into SKU(

        <include refid="all_sku_column"></include>
        )
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.id}, #{item.supplierId}, #{item.spuId}, #{item.skuId},
            #{item.productName},#{item.marketPrice},#{item.salePrice}, #{item.supplierPrice}, #{item.barcode}, #{item.productCode},
            #{item.color} , #{item.productDescribe}, #{item.saleCurrency}, #{item.productSize}, #{item.stock},#{item.memo},
            #{createTime}, #{lastTime}, #{newMarketPrice} , #{newSalePrice} , #{newSupplierPrice} ,
            #{updateTime},#{eventStartDate},#{eventEndDate},#{measurement})
        </foreach>

    </insert>

	<select id="findNewPrice" parameterType="java.lang.String" resultMap="priceMap">
			select SKU_ID as skuId,
				MARKET_PRICE as marketPrice,
				SUPPLIER_PRICE as supplierPrice,
				SALE_PRICE as salePrice,
			    NEW_MARKET_PRICE as newMarketPrice,
      	 	  	NEW_SUPPLIER_PRICE as newSupplierPrice,
				NEW_SALE_PRICE as newSalePrice
      	 	  	from SKU sku
        <where>
	           SUPPLIER_ID = #{supplierId}
        </where>
	</select>

	<select id="findNewPriceBySku" resultMap="priceMap">
			select SKU_ID as skuId,
				MARKET_PRICE as marketPrice,
				SUPPLIER_PRICE as supplierPrice,
				SALE_PRICE as salePrice,
				NEW_SALE_PRICE as newSalePrice,
			    NEW_MARKET_PRICE as newMarketPrice,
      	 	  	NEW_SUPPLIER_PRICE as newSupplierPrice
      	 	  	from SKU sku
        <where>
             <if test="null!=supplierId">
                SUPPLIER_ID = #{supplierId}
            </if>
            <if test="null!=skuId">
                and SKU_ID = #{skuId}
            </if>
        </where>
	</select>


	<select id="findListBySupplierAndLastDate"  resultMap="stockAndPriceMap">
		select
		SUPPLIER_ID as  supplierId,
		SKU_ID as skuId,
		STOCK as stock,
		MARKET_PRICE as marketPrice,
		SUPPLIER_PRICE as supplierPrice,
		SALE_PRICE as salePrice,
		NEW_SALE_PRICE as newSalePrice,
		NEW_MARKET_PRICE as newMarketPrice,
		NEW_SUPPLIER_PRICE as newSupplierPrice
		from SKU sku
		<where>


			<if test="null!=supplier">
				  sku.SUPPLIER_ID = #{supplier}
			</if>
			<if test="null!=startDate">
				and sku.LAST_TIME >= #{startDate}
			</if>
			<if test="endDate!=null">

				<![CDATA[ and sku.LAST_TIME <= #{endDate}    ]]>

			</if>



		</where>



	</select>

	
	<update id="updatePrice" parameterType="iog_sku" >
	    update SKU
       <set>
		 <if test="marketPrice != null"> MARKET_PRICE = #{marketPrice}, </if> 
		 <if test="salePrice != null"> SALE_PRICE = #{salePrice}, </if> 
		 <if test="supplierPrice != null"> SUPPLIER_PRICE = #{supplierPrice},</if>
	     <if test="updateTime != null"> UPDATE_TIME = #{updateTime},</if>
	   </set>
	    where  SUPPLIER_ID = #{supplierId}   and   SKU_ID = #{skuId}

    </update>
	<select id="findSKUBySupplierAndSkuId"  resultMap="skuMap" parameterType="java.lang.String">
	        select
	           <include refid="all_sku_column"></include>
	        from SKU
	        <where>
	            <if test="null!=supplierId">
	                SUPPLIER_ID = #{supplierId}
	            </if>
	            <if test="null!=skuId">
	                and SKU_ID = #{skuId}
	            </if>
	        </where>
	    </select>
	    
	<update id="updateSkuMemo">
	    update SKU
       <set>
		  MEMO = CONCAT(IF(MEMO IS NULL ,"",MEMO)," ",#{memo}), 
	      LAST_TIME = #{lastTime},
	   </set>
	    where  SUPPLIER_ID = #{supplierId}   and   SKU_ID = #{skuId}
    </update>
    
    
    <update id="updateLastTime">
       update SKU
       <set>
       		LAST_TIME = NOW()
       </set>
       <where>
	            <if test="null!=supplierId">
	                SUPPLIER_ID = #{supplierId}
	            </if>
	            <if test="null!=skuId">
	                and SKU_ID = #{skuId}
	            </if>
	               <if test="null!=spuId">
	                and SpU_ID = #{spuId}
	            </if>
	        </where>
    </update>
	<update id="updateSkuMemoList">
       update SKU
       <set>
       		<!--MEMO = CONCAT(IF(MEMO IS NULL ,"",MEMO)," ",CONCAT(NOW(),"价格变化")),-->
       		MEMO = CONCAT(NOW(),"价格变化"),
       		LAST_TIME = NOW(),
       </set>
       <where>
           SUPPLIER_ID = #{supplierId} 
     	  <foreach collection="list" item="id" open="AND SKU_ID IN (" close=")" separator=",">
			#{id}       
     	  </foreach>
       </where>
    </update>
    
    <update id="updateSpSkuIdBySupplier">
    	update SKU
    	<set>
    		<if test="null != spSkuId">SP_SKU_ID = #{spSkuId},</if>
    		<if test="null != skuStatus">SP_STATUS = #{skuStatus},</if>
    		<if test="null != spProductCode">SP_PRODUCT_CODE = #{spProductCode}</if>
    	</set>
    	where  SUPPLIER_ID = #{supplierId}   and   SKU_ID = #{supplierSkuId}
    </update>
    
    <select id="findSpSkuIdsBySupplier" resultMap="skuId_spSkuId">
    	select SKU_ID ,SP_SKU_ID ,SP_PRODUCT_CODE
		from SKU where SUPPLIER_ID = #{supplierId}    
    </select>
    
    <select id="findMaxTimeBySupplier" resultType="java.util.Date">
    	select max(UPDATE_TIME) from SKU 
    	where SUPPLIER_ID = #{supplierId} and STOCK >0
    </select>
    
</mapper>
