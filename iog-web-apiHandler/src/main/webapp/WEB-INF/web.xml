<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         metadata-complete="true">


<context-param>
        <param-name>contextClass</param-name>
        <param-value>
            org.springframework.web.context.support.AnnotationConfigWebApplicationContext
        </param-value>
    </context-param>
    <!-- 父上下文 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!-- spring 纯注解-->
        <param-value>com.shangpin.iog.webcontainer.front.conf.AppContext</param-value>
        <!--<param-value>classpath*:META-INF/spring/*.xml</param-value>-->
    </context-param>



    <filter>
        <filter-name>charsetFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>

    </filter>
    <filter-mapping>
        <filter-name>charsetFilter</filter-name>
        <servlet-name>spring</servlet-name>
    </filter-mapping>
   <!--  <filter>
        <filter-name>permissionFilter</filter-name>
        <filter-class>com.shangpin.iog.webcontainer.front.conf.PermissionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>permissionFilter</filter-name>
        <servlet-name>spring</servlet-name>
    </filter-mapping> -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>



    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- DispatcherServlet继承了父上下文，由于父子上下文用的同一个，因此不用再注解父上下文了，
                    除非contextConfigLocation指明的class明确区分了父子上下文：
                    比如：父上下文class注解@ComponentScan("com.shangpin.shop.schedule.service")只扫描了业务层，
                    而只上下文class注解@ComponentScan("com.shangpin.shop.frontnt.web")只扫描了v层
                    那么就可以定义下面的:
         -->
        <init-param>
            <param-name>contextClass</param-name>
            <param-value>
                org.springframework.web.context.support.AnnotationConfigWebApplicationContext
            </param-value>
        </init-param>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>com.shangpin.iog.webcontainer.front.conf.WebControllerContext</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <!-- 这里在配成spring,下边也要写一个名为spring-servlet.xml的文件，主要用来配置它的controller -->
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>


    <welcome-file-list>
        <welcome-file>/api/csv</welcome-file>
    </welcome-file-list>
    <error-page>
        <error-code>404</error-code>
        <location>/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/500.jsp</location>
    </error-page>
    <error-page>
        <error-code>503</error-code>
        <location>/500.jsp</location>
    </error-page>


</web-app>
