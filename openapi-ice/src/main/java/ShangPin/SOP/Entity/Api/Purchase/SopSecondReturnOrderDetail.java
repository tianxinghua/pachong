// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `SopSecondReturnOrderDetail.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ShangPin.SOP.Entity.Api.Purchase;

public class SopSecondReturnOrderDetail extends Ice.ObjectImpl
{
    public SopSecondReturnOrderDetail()
    {
    }

    public SopSecondReturnOrderDetail(String SopSecondReturnOrderDetailId, String SopSecondReturnOrderNo, int ReturnDetailStatus, String SkuNo, String Pid, String CurrencyName, String PurchasePrice, String SopProductName, String SkuName, String BarCode, String ProductModel, String BrandNo, String BrandName, String CategoryName, String Material, String PlaceOriginText, String ProductColor, String ProductSizeValue, String SupplierSkuNo, String SkuPrice, String SkuPriceCurrency, String SopPurchaseOrderNo, String PictureNos, String CCCRemark, int IsToCCC, String SupplierRemark, String SupplierPicNo, int SupplierReason, byte[] SupplierPic)
    {
        this.SopSecondReturnOrderDetailId = SopSecondReturnOrderDetailId;
        this.SopSecondReturnOrderNo = SopSecondReturnOrderNo;
        this.ReturnDetailStatus = ReturnDetailStatus;
        this.SkuNo = SkuNo;
        this.Pid = Pid;
        this.CurrencyName = CurrencyName;
        this.PurchasePrice = PurchasePrice;
        this.SopProductName = SopProductName;
        this.SkuName = SkuName;
        this.BarCode = BarCode;
        this.ProductModel = ProductModel;
        this.BrandNo = BrandNo;
        this.BrandName = BrandName;
        this.CategoryName = CategoryName;
        this.Material = Material;
        this.PlaceOriginText = PlaceOriginText;
        this.ProductColor = ProductColor;
        this.ProductSizeValue = ProductSizeValue;
        this.SupplierSkuNo = SupplierSkuNo;
        this.SkuPrice = SkuPrice;
        this.SkuPriceCurrency = SkuPriceCurrency;
        this.SopPurchaseOrderNo = SopPurchaseOrderNo;
        this.PictureNos = PictureNos;
        this.CCCRemark = CCCRemark;
        this.IsToCCC = IsToCCC;
        this.SupplierRemark = SupplierRemark;
        this.SupplierPicNo = SupplierPicNo;
        this.SupplierReason = SupplierReason;
        this.SupplierPic = SupplierPic;
    }

    private static class __F implements Ice.ObjectFactory
    {
        public Ice.Object create(String type)
        {
            assert(type.equals(ice_staticId()));
            return new SopSecondReturnOrderDetail();
        }

        public void destroy()
        {
        }
    }
    private static Ice.ObjectFactory _factory = new __F();

    public static Ice.ObjectFactory
    ice_factory()
    {
        return _factory;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::ShangPin::SOP::Entity::Api::Purchase::SopSecondReturnOrderDetail"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeString(SopSecondReturnOrderDetailId);
        __os.writeString(SopSecondReturnOrderNo);
        __os.writeInt(ReturnDetailStatus);
        __os.writeString(SkuNo);
        __os.writeString(Pid);
        __os.writeString(CurrencyName);
        __os.writeString(PurchasePrice);
        __os.writeString(SopProductName);
        __os.writeString(SkuName);
        __os.writeString(BarCode);
        __os.writeString(ProductModel);
        __os.writeString(BrandNo);
        __os.writeString(BrandName);
        __os.writeString(CategoryName);
        __os.writeString(Material);
        __os.writeString(PlaceOriginText);
        __os.writeString(ProductColor);
        __os.writeString(ProductSizeValue);
        __os.writeString(SupplierSkuNo);
        __os.writeString(SkuPrice);
        __os.writeString(SkuPriceCurrency);
        __os.writeString(SopPurchaseOrderNo);
        __os.writeString(PictureNos);
        __os.writeString(CCCRemark);
        __os.writeInt(IsToCCC);
        __os.writeString(SupplierRemark);
        __os.writeString(SupplierPicNo);
        __os.writeInt(SupplierReason);
        SopImageByteArrayHelper.write(__os, SupplierPic);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        SopSecondReturnOrderDetailId = __is.readString();
        SopSecondReturnOrderNo = __is.readString();
        ReturnDetailStatus = __is.readInt();
        SkuNo = __is.readString();
        Pid = __is.readString();
        CurrencyName = __is.readString();
        PurchasePrice = __is.readString();
        SopProductName = __is.readString();
        SkuName = __is.readString();
        BarCode = __is.readString();
        ProductModel = __is.readString();
        BrandNo = __is.readString();
        BrandName = __is.readString();
        CategoryName = __is.readString();
        Material = __is.readString();
        PlaceOriginText = __is.readString();
        ProductColor = __is.readString();
        ProductSizeValue = __is.readString();
        SupplierSkuNo = __is.readString();
        SkuPrice = __is.readString();
        SkuPriceCurrency = __is.readString();
        SopPurchaseOrderNo = __is.readString();
        PictureNos = __is.readString();
        CCCRemark = __is.readString();
        IsToCCC = __is.readInt();
        SupplierRemark = __is.readString();
        SupplierPicNo = __is.readString();
        SupplierReason = __is.readInt();
        SupplierPic = SopImageByteArrayHelper.read(__is);
        __is.endReadSlice();
    }

    public String SopSecondReturnOrderDetailId;

    public String SopSecondReturnOrderNo;

    public int ReturnDetailStatus;

    public String SkuNo;

    public String Pid;

    public String CurrencyName;

    public String PurchasePrice;

    public String SopProductName;

    public String SkuName;

    public String BarCode;

    public String ProductModel;

    public String BrandNo;

    public String BrandName;

    public String CategoryName;

    public String Material;

    public String PlaceOriginText;

    public String ProductColor;

    public String ProductSizeValue;

    public String SupplierSkuNo;

    public String SkuPrice;

    public String SkuPriceCurrency;

    public String SopPurchaseOrderNo;

    public String PictureNos;

    public String CCCRemark;

    public int IsToCCC;

    public String SupplierRemark;

    public String SupplierPicNo;

    public int SupplierReason;

    public byte[] SupplierPic;

    public static final long serialVersionUID = 397734142L;
}
