// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `DirectPurchaseOrder.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ShangPin.SOP.Entity.Api.Purchase;

public class DirectPurchaseOrder extends Ice.ObjectImpl
{
    public DirectPurchaseOrder()
    {
    }

    public DirectPurchaseOrder(String SopPurchaseOrderNo, String SupplierNo, String DateStart, String DateEnd, String PurchaseContacts, String PurchaseContactsPhone, int DataSource, String Memo, java.util.List<DirectPurchaseOrderDetail> DirectPurchaseOrderDetailList, String ConsigneeName, String ConsigneeMobile, String ConsigneeAddress, String ConsigneeProvinceName, String ConsigneeCityName, String ConsigneeAreaName, String ConsigneeTownName, String DeliveryBefore, int IsOutside, String LogisticsName, String LogisticsOrderNo, String DateDeliver, String EstimateArrivedTime, String DeliveryAddress, String DeliveryContacts, String DeliveryMemo, String DeliveryContactsPhone)
    {
        this.SopPurchaseOrderNo = SopPurchaseOrderNo;
        this.SupplierNo = SupplierNo;
        this.DateStart = DateStart;
        this.DateEnd = DateEnd;
        this.PurchaseContacts = PurchaseContacts;
        this.PurchaseContactsPhone = PurchaseContactsPhone;
        this.DataSource = DataSource;
        this.Memo = Memo;
        this.DirectPurchaseOrderDetailList = DirectPurchaseOrderDetailList;
        this.ConsigneeName = ConsigneeName;
        this.ConsigneeMobile = ConsigneeMobile;
        this.ConsigneeAddress = ConsigneeAddress;
        this.ConsigneeProvinceName = ConsigneeProvinceName;
        this.ConsigneeCityName = ConsigneeCityName;
        this.ConsigneeAreaName = ConsigneeAreaName;
        this.ConsigneeTownName = ConsigneeTownName;
        this.DeliveryBefore = DeliveryBefore;
        this.IsOutside = IsOutside;
        this.LogisticsName = LogisticsName;
        this.LogisticsOrderNo = LogisticsOrderNo;
        this.DateDeliver = DateDeliver;
        this.EstimateArrivedTime = EstimateArrivedTime;
        this.DeliveryAddress = DeliveryAddress;
        this.DeliveryContacts = DeliveryContacts;
        this.DeliveryMemo = DeliveryMemo;
        this.DeliveryContactsPhone = DeliveryContactsPhone;
    }

    private static class __F implements Ice.ObjectFactory
    {
        public Ice.Object create(String type)
        {
            assert(type.equals(ice_staticId()));
            return new DirectPurchaseOrder();
        }

        public void destroy()
        {
        }
    }
    private static Ice.ObjectFactory _factory = new __F();

    public static Ice.ObjectFactory
    ice_factory()
    {
        return _factory;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::ShangPin::SOP::Entity::Api::Purchase::DirectPurchaseOrder"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeString(SopPurchaseOrderNo);
        __os.writeString(SupplierNo);
        __os.writeString(DateStart);
        __os.writeString(DateEnd);
        __os.writeString(PurchaseContacts);
        __os.writeString(PurchaseContactsPhone);
        __os.writeInt(DataSource);
        __os.writeString(Memo);
        DirectPurchaseOrderDetailListsHelper.write(__os, DirectPurchaseOrderDetailList);
        __os.writeString(ConsigneeName);
        __os.writeString(ConsigneeMobile);
        __os.writeString(ConsigneeAddress);
        __os.writeString(ConsigneeProvinceName);
        __os.writeString(ConsigneeCityName);
        __os.writeString(ConsigneeAreaName);
        __os.writeString(ConsigneeTownName);
        __os.writeString(DeliveryBefore);
        __os.writeInt(IsOutside);
        __os.writeString(LogisticsName);
        __os.writeString(LogisticsOrderNo);
        __os.writeString(DateDeliver);
        __os.writeString(EstimateArrivedTime);
        __os.writeString(DeliveryAddress);
        __os.writeString(DeliveryContacts);
        __os.writeString(DeliveryMemo);
        __os.writeString(DeliveryContactsPhone);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        SopPurchaseOrderNo = __is.readString();
        SupplierNo = __is.readString();
        DateStart = __is.readString();
        DateEnd = __is.readString();
        PurchaseContacts = __is.readString();
        PurchaseContactsPhone = __is.readString();
        DataSource = __is.readInt();
        Memo = __is.readString();
        DirectPurchaseOrderDetailList = DirectPurchaseOrderDetailListsHelper.read(__is);
        ConsigneeName = __is.readString();
        ConsigneeMobile = __is.readString();
        ConsigneeAddress = __is.readString();
        ConsigneeProvinceName = __is.readString();
        ConsigneeCityName = __is.readString();
        ConsigneeAreaName = __is.readString();
        ConsigneeTownName = __is.readString();
        DeliveryBefore = __is.readString();
        IsOutside = __is.readInt();
        LogisticsName = __is.readString();
        LogisticsOrderNo = __is.readString();
        DateDeliver = __is.readString();
        EstimateArrivedTime = __is.readString();
        DeliveryAddress = __is.readString();
        DeliveryContacts = __is.readString();
        DeliveryMemo = __is.readString();
        DeliveryContactsPhone = __is.readString();
        __is.endReadSlice();
    }

    public String SopPurchaseOrderNo;

    public String SupplierNo;

    public String DateStart;

    public String DateEnd;

    public String PurchaseContacts;

    public String PurchaseContactsPhone;

    public int DataSource;

    public String Memo;

    public java.util.List<DirectPurchaseOrderDetail> DirectPurchaseOrderDetailList;

    public String ConsigneeName;

    public String ConsigneeMobile;

    public String ConsigneeAddress;

    public String ConsigneeProvinceName;

    public String ConsigneeCityName;

    public String ConsigneeAreaName;

    public String ConsigneeTownName;

    public String DeliveryBefore;

    public int IsOutside;

    public String LogisticsName;

    public String LogisticsOrderNo;

    public String DateDeliver;

    public String EstimateArrivedTime;

    public String DeliveryAddress;

    public String DeliveryContacts;

    public String DeliveryMemo;

    public String DeliveryContactsPhone;

    public static final long serialVersionUID = -431949844L;
}
