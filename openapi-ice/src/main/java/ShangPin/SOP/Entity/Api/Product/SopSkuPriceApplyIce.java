// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `SopSkuPriceApplyIce.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ShangPin.SOP.Entity.Api.Product;

public class SopSkuPriceApplyIce extends Ice.ObjectImpl
{
    public SopSkuPriceApplyIce()
    {
    }

    public SopSkuPriceApplyIce(int PriceStatus, String PriceEffectDate, String PriceFailureDate, String SkuName, String SkuNo, String SupplierSkuNo, String SupplyCurrency, String SupplyPrice, String MarketPrice, String MarketPriceCurrency, String StagePrice, String StagePriceEffectDate, String StagePriceFailureDate, String SellPrice, String SellPriceCurrency, String DiscountRate)
    {
        this.PriceStatus = PriceStatus;
        this.PriceEffectDate = PriceEffectDate;
        this.PriceFailureDate = PriceFailureDate;
        this.SkuName = SkuName;
        this.SkuNo = SkuNo;
        this.SupplierSkuNo = SupplierSkuNo;
        this.SupplyCurrency = SupplyCurrency;
        this.SupplyPrice = SupplyPrice;
        this.MarketPrice = MarketPrice;
        this.MarketPriceCurrency = MarketPriceCurrency;
        this.StagePrice = StagePrice;
        this.StagePriceEffectDate = StagePriceEffectDate;
        this.StagePriceFailureDate = StagePriceFailureDate;
        this.SellPrice = SellPrice;
        this.SellPriceCurrency = SellPriceCurrency;
        this.DiscountRate = DiscountRate;
    }

    private static class __F implements Ice.ObjectFactory
    {
        public Ice.Object create(String type)
        {
            assert(type.equals(ice_staticId()));
            return new SopSkuPriceApplyIce();
        }

        public void destroy()
        {
        }
    }
    private static Ice.ObjectFactory _factory = new __F();

    public static Ice.ObjectFactory
    ice_factory()
    {
        return _factory;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::ShangPin::SOP::Entity::Api::Product::SopSkuPriceApplyIce"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeInt(PriceStatus);
        __os.writeString(PriceEffectDate);
        __os.writeString(PriceFailureDate);
        __os.writeString(SkuName);
        __os.writeString(SkuNo);
        __os.writeString(SupplierSkuNo);
        __os.writeString(SupplyCurrency);
        __os.writeString(SupplyPrice);
        __os.writeString(MarketPrice);
        __os.writeString(MarketPriceCurrency);
        __os.writeString(StagePrice);
        __os.writeString(StagePriceEffectDate);
        __os.writeString(StagePriceFailureDate);
        __os.writeString(SellPrice);
        __os.writeString(SellPriceCurrency);
        __os.writeString(DiscountRate);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        PriceStatus = __is.readInt();
        PriceEffectDate = __is.readString();
        PriceFailureDate = __is.readString();
        SkuName = __is.readString();
        SkuNo = __is.readString();
        SupplierSkuNo = __is.readString();
        SupplyCurrency = __is.readString();
        SupplyPrice = __is.readString();
        MarketPrice = __is.readString();
        MarketPriceCurrency = __is.readString();
        StagePrice = __is.readString();
        StagePriceEffectDate = __is.readString();
        StagePriceFailureDate = __is.readString();
        SellPrice = __is.readString();
        SellPriceCurrency = __is.readString();
        DiscountRate = __is.readString();
        __is.endReadSlice();
    }

    public int PriceStatus;

    public String PriceEffectDate;

    public String PriceFailureDate;

    public String SkuName;

    public String SkuNo;

    public String SupplierSkuNo;

    public String SupplyCurrency;

    public String SupplyPrice;

    public String MarketPrice;

    public String MarketPriceCurrency;

    public String StagePrice;

    public String StagePriceEffectDate;

    public String StagePriceFailureDate;

    public String SellPrice;

    public String SellPriceCurrency;

    public String DiscountRate;

    public static final long serialVersionUID = 1560707101L;
}
