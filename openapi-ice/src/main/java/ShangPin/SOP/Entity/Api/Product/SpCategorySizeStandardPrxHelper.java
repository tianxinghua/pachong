// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `SpCategorySizeStandard.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ShangPin.SOP.Entity.Api.Product;

public final class SpCategorySizeStandardPrxHelper extends Ice.ObjectPrxHelperBase implements SpCategorySizeStandardPrx
{
    public static SpCategorySizeStandardPrx checkedCast(Ice.ObjectPrx __obj)
    {
        SpCategorySizeStandardPrx __d = null;
        if(__obj != null)
        {
            if(__obj instanceof SpCategorySizeStandardPrx)
            {
                __d = (SpCategorySizeStandardPrx)__obj;
            }
            else
            {
                if(__obj.ice_isA(ice_staticId()))
                {
                    SpCategorySizeStandardPrxHelper __h = new SpCategorySizeStandardPrxHelper();
                    __h.__copyFrom(__obj);
                    __d = __h;
                }
            }
        }
        return __d;
    }

    public static SpCategorySizeStandardPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        SpCategorySizeStandardPrx __d = null;
        if(__obj != null)
        {
            if(__obj instanceof SpCategorySizeStandardPrx)
            {
                __d = (SpCategorySizeStandardPrx)__obj;
            }
            else
            {
                if(__obj.ice_isA(ice_staticId(), __ctx))
                {
                    SpCategorySizeStandardPrxHelper __h = new SpCategorySizeStandardPrxHelper();
                    __h.__copyFrom(__obj);
                    __d = __h;
                }
            }
        }
        return __d;
    }

    public static SpCategorySizeStandardPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        SpCategorySizeStandardPrx __d = null;
        if(__obj != null)
        {
            Ice.ObjectPrx __bb = __obj.ice_facet(__facet);
            try
            {
                if(__bb.ice_isA(ice_staticId()))
                {
                    SpCategorySizeStandardPrxHelper __h = new SpCategorySizeStandardPrxHelper();
                    __h.__copyFrom(__bb);
                    __d = __h;
                }
            }
            catch(Ice.FacetNotExistException ex)
            {
            }
        }
        return __d;
    }

    public static SpCategorySizeStandardPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        SpCategorySizeStandardPrx __d = null;
        if(__obj != null)
        {
            Ice.ObjectPrx __bb = __obj.ice_facet(__facet);
            try
            {
                if(__bb.ice_isA(ice_staticId(), __ctx))
                {
                    SpCategorySizeStandardPrxHelper __h = new SpCategorySizeStandardPrxHelper();
                    __h.__copyFrom(__bb);
                    __d = __h;
                }
            }
            catch(Ice.FacetNotExistException ex)
            {
            }
        }
        return __d;
    }

    public static SpCategorySizeStandardPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        SpCategorySizeStandardPrx __d = null;
        if(__obj != null)
        {
            if(__obj instanceof SpCategorySizeStandardPrx)
            {
                __d = (SpCategorySizeStandardPrx)__obj;
            }
            else
            {
                SpCategorySizeStandardPrxHelper __h = new SpCategorySizeStandardPrxHelper();
                __h.__copyFrom(__obj);
                __d = __h;
            }
        }
        return __d;
    }

    public static SpCategorySizeStandardPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        SpCategorySizeStandardPrx __d = null;
        if(__obj != null)
        {
            Ice.ObjectPrx __bb = __obj.ice_facet(__facet);
            SpCategorySizeStandardPrxHelper __h = new SpCategorySizeStandardPrxHelper();
            __h.__copyFrom(__bb);
            __d = __h;
        }
        return __d;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::ShangPin::SOP::Entity::Api::Product::SpCategorySizeStandard"
    };

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected Ice._ObjectDelM __createDelegateM()
    {
        return new _SpCategorySizeStandardDelM();
    }

    protected Ice._ObjectDelD __createDelegateD()
    {
        return new _SpCategorySizeStandardDelD();
    }

    public static void __write(IceInternal.BasicStream __os, SpCategorySizeStandardPrx v)
    {
        __os.writeProxy(v);
    }

    public static SpCategorySizeStandardPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            SpCategorySizeStandardPrxHelper result = new SpCategorySizeStandardPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
