// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `SopCategoryBrandAgreementPage.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ShangPin.SOP.Entity.Api.BaseDatas;

public class SopCategoryBrandAgreementIce extends Ice.ObjectImpl
{
    public SopCategoryBrandAgreementIce()
    {
    }

    public SopCategoryBrandAgreementIce(long CategoryBrandAgreementId, long SopUserNo, String CategoryNo, String BrandNo, String DiscountRate, int IsExclusive, String CreateUserName, String CreateTime, String UpdateUserName, String UpdateTime, int DataState, String CategoryName, String BrandName, String SupplyPriceRate, int IsDirectdelivery)
    {
        this.CategoryBrandAgreementId = CategoryBrandAgreementId;
        this.SopUserNo = SopUserNo;
        this.CategoryNo = CategoryNo;
        this.BrandNo = BrandNo;
        this.DiscountRate = DiscountRate;
        this.IsExclusive = IsExclusive;
        this.CreateUserName = CreateUserName;
        this.CreateTime = CreateTime;
        this.UpdateUserName = UpdateUserName;
        this.UpdateTime = UpdateTime;
        this.DataState = DataState;
        this.CategoryName = CategoryName;
        this.BrandName = BrandName;
        this.SupplyPriceRate = SupplyPriceRate;
        this.IsDirectdelivery = IsDirectdelivery;
    }

    private static class __F implements Ice.ObjectFactory
    {
        public Ice.Object create(String type)
        {
            assert(type.equals(ice_staticId()));
            return new SopCategoryBrandAgreementIce();
        }

        public void destroy()
        {
        }
    }
    private static Ice.ObjectFactory _factory = new __F();

    public static Ice.ObjectFactory
    ice_factory()
    {
        return _factory;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::ShangPin::SOP::Entity::Api::BaseDatas::SopCategoryBrandAgreementIce"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeLong(CategoryBrandAgreementId);
        __os.writeLong(SopUserNo);
        __os.writeString(CategoryNo);
        __os.writeString(BrandNo);
        __os.writeString(DiscountRate);
        __os.writeInt(IsExclusive);
        __os.writeString(CreateUserName);
        __os.writeString(CreateTime);
        __os.writeString(UpdateUserName);
        __os.writeString(UpdateTime);
        __os.writeInt(DataState);
        __os.writeString(CategoryName);
        __os.writeString(BrandName);
        __os.writeString(SupplyPriceRate);
        __os.writeInt(IsDirectdelivery);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        CategoryBrandAgreementId = __is.readLong();
        SopUserNo = __is.readLong();
        CategoryNo = __is.readString();
        BrandNo = __is.readString();
        DiscountRate = __is.readString();
        IsExclusive = __is.readInt();
        CreateUserName = __is.readString();
        CreateTime = __is.readString();
        UpdateUserName = __is.readString();
        UpdateTime = __is.readString();
        DataState = __is.readInt();
        CategoryName = __is.readString();
        BrandName = __is.readString();
        SupplyPriceRate = __is.readString();
        IsDirectdelivery = __is.readInt();
        __is.endReadSlice();
    }

    public long CategoryBrandAgreementId;

    public long SopUserNo;

    public String CategoryNo;

    public String BrandNo;

    public String DiscountRate;

    public int IsExclusive;

    public String CreateUserName;

    public String CreateTime;

    public String UpdateUserName;

    public String UpdateTime;

    public int DataState;

    public String CategoryName;

    public String BrandName;

    public String SupplyPriceRate;

    public int IsDirectdelivery;

    public static final long serialVersionUID = -1320363998L;
}
