<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shangpin.ephub.data.mysql.dictionary.brand.mapper.HubBrandDicMapper" >
  <resultMap id="BaseResultMap" type="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDic" >
    <id column="brand_dic_id" property="brandDicId" jdbcType="BIGINT" />
    <result column="hub_brand_no" property="hubBrandNo" jdbcType="VARCHAR" />
    <result column="supplier_brand" property="supplierBrand" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="data_state" property="dataState" jdbcType="TINYINT" />
    <result column="version" property="version" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      brand_dic_id, hub_brand_no, supplier_brand, create_time, create_user, update_time, 
      update_user, memo, data_state, version
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDicCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hub_brand_dic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    brand_dic_id,hub_brand_no,supplier_brand,create_time,create_user,update_time,update_user,memo,data_state,version
    from hub_brand_dic
    where brand_dic_id = #{brandDicId,jdbcType=BIGINT}
  </select>
  
    <select id="selectHUbBrandNo"  resultMap="BaseResultMap" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDicCriteria" >
      select hub_brand_no from hub_brand_dic  WHERE hub_brand_no is not null GROUP BY hub_brand_no  limit #{startRow} , #{pageSize}
  </select>
	  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hub_brand_dic
    where brand_dic_id = #{brandDicId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDicCriteria" >
    delete from hub_brand_dic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDic" >
    <selectKey keyColumn="brand_dic_id" keyProperty="brandDicId" order="AFTER" resultType="long">
  		SELECT LAST_INSERT_ID() AS brand_dic_id
  	</selectKey>
    insert into hub_brand_dic (brand_dic_id, hub_brand_no, supplier_brand, 
      create_time, create_user, update_time, 
      update_user, memo, data_state, 
      version)
    values (#{brandDicId,jdbcType=BIGINT}, #{hubBrandNo,jdbcType=VARCHAR}, #{supplierBrand,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{dataState,jdbcType=TINYINT}, 
      #{version,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDic" >
    <selectKey keyColumn="brand_dic_id" keyProperty="brandDicId" order="AFTER" resultType="long">
  		SELECT LAST_INSERT_ID() AS brand_dic_id
  	</selectKey>
    insert into hub_brand_dic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="brandDicId != null" >
        brand_dic_id,
      </if>
      <if test="hubBrandNo != null" >
        hub_brand_no,
      </if>
      <if test="supplierBrand != null" >
        supplier_brand,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="dataState != null" >
        data_state,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="brandDicId != null" >
        #{brandDicId,jdbcType=BIGINT},
      </if>
      <if test="hubBrandNo != null" >
        #{hubBrandNo,jdbcType=VARCHAR},
      </if>
      <if test="supplierBrand != null" >
        #{supplierBrand,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="dataState != null" >
        #{dataState,jdbcType=TINYINT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDicCriteria" resultType="java.lang.Integer" >
    select count(*) from hub_brand_dic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="count" resultType="java.lang.Integer" >
select count(DISTINCT hub_brand_no) from hub_brand_dic
  </select>
  
  
  <update id="updateByExampleSelective" parameterType="map" >
    update hub_brand_dic
    <set >
      <if test="record.brandDicId != null" >
        brand_dic_id = #{record.brandDicId,jdbcType=BIGINT},
      </if>
      <if test="record.hubBrandNo != null" >
        hub_brand_no = #{record.hubBrandNo,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierBrand != null" >
        supplier_brand = #{record.supplierBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.dataState != null" >
        data_state = #{record.dataState,jdbcType=TINYINT},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hub_brand_dic
    set brand_dic_id = #{record.brandDicId,jdbcType=BIGINT},
      hub_brand_no = #{record.hubBrandNo,jdbcType=VARCHAR},
      supplier_brand = #{record.supplierBrand,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      data_state = #{record.dataState,jdbcType=TINYINT},
      version = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDic" >
    update hub_brand_dic
    <set >
      <if test="hubBrandNo != null" >
        hub_brand_no = #{hubBrandNo,jdbcType=VARCHAR},
      </if>
      <if test="supplierBrand != null" >
        supplier_brand = #{supplierBrand,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="dataState != null" >
        data_state = #{dataState,jdbcType=TINYINT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
    </set>
    where brand_dic_id = #{brandDicId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDic" >
    update hub_brand_dic
    set hub_brand_no = #{hubBrandNo,jdbcType=VARCHAR},
      supplier_brand = #{supplierBrand,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      data_state = #{dataState,jdbcType=TINYINT},
      version = #{version,jdbcType=BIGINT}
    where brand_dic_id = #{brandDicId,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.shangpin.ephub.data.mysql.dictionary.brand.po.HubBrandDicCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hub_brand_dic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
</mapper>